name: Build firmware and release

on:
  workflow_dispatch:
      inputs:
        tag:
          description: "Firmare version (Tag)"
          required: true
          default: 'v*.*.*'

jobs:
  release:

    runs-on: ubuntu-latest

    steps:

    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v1

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install platformio

    - name: Run PlatformIO build on selected platforms
      run: pio run -e esp32doit-devkit-v1 -e ttgo-t-eight -e ttgo-t-display -e heltec_wifi_kit_32 -e esp-wrover-kit

    - name: Copy binary files
      run: |
        rm -rf ./firmware/esp32doit-devkit-v1/*
        echo ${{ github.event.inputs.tag }} > ./firmware/esp32doit-devkit-v1/version.txt
        cp .platformio/packages/framework-arduinoespressif32/tools/sdk/bin/bootloader_dio_40m.bin ./firmware/esp32doit-devkit-v1/esp32doit-devkit-v1-${{ github.event.inputs.tag }}-bootloader.bin
        cp .pio/build/esp32doit-devkit-v1/partitions.bin  ./firmware/esp32doit-devkit-v1/esp32doit-devkit-v1-${{ github.event.inputs.tag }}-partitions.bin
        cp .pio/build/esp32doit-devkit-v1/firmware.bin    ./firmware/esp32doit-devkit-v1/esp32doit-devkit-v1-${{ github.event.inputs.tag }}-firmware.bin
        cp .pio/build/esp32doit-devkit-v1/spiffs.bin      ./firmware/esp32doit-devkit-v1/esp32doit-devkit-v1-${{ github.event.inputs.tag }}-spiffs.bin
        rm -rf ./firmware/ttgo-t-eight/*
        echo ${{ github.event.inputs.tag }} > ./firmware/ttgo-t-eight/version.txt
        cp .pio/build/ttgo-t-eight/firmware.bin ./firmware/ttgo-t-eight/ttgo-t-eight-${{ github.event.inputs.tag }}.bin
        rm -rf ./firmware/ttgo-t-display/*
        echo ${{ github.event.inputs.tag }} > ./firmware/ttgo-t-display/version.txt
        cp .platformio/packages/framework-arduinoespressif32/tools/sdk/bin/bootloader_dio_40m.bin ./firmware/ttgo-t-display/ttgo-t-display-${{ github.event.inputs.tag }}-bootloader.bin
        cp .pio/build/ttgo-t-display/partitions.bin   ./firmware/ttgo-t-display/ttgo-t-display-${{ github.event.inputs.tag }}-partitions.bin
        cp .pio/build/ttgo-t-display/firmware.bin     ./firmware/ttgo-t-display/ttgo-t-display-${{ github.event.inputs.tag }}-firmware.bin
        cp .pio/build/ttgo-t-display/spiffs.bin       ./firmware/ttgo-t-display/ttgo-t-display-${{ github.event.inputs.tag }}-spiffs.bin
        rm -rf ./firmware/heltec_wifi_kit_32/*
        echo ${{ github.event.inputs.tag }} > ./firmware/heltec_wifi_kit_32/version.txt
        cp .pio/build/heltec_wifi_kit_32/firmware.bin ./firmware/heltec_wifi_kit_32/heltec_wifi_kit_32-${{ github.event.inputs.tag }}.bin
        rm -rf ./firmware/esp-wrover-kit/*
        echo ${{ github.event.inputs.tag }} > ./firmware/esp-wrover-kit/version.txt
        cp .pio/build/esp-wrover-kit/firmware.bin ./firmware/esp-wrover-kit/esp-wrover-kit-${{ github.event.inputs.tag }}.bin

    - name: Commit and push firmware ${{ github.event.inputs.tag }} files
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        git add .
        git commit -m "Release firmware ${{ github.event.inputs.tag }}"
        git push origin HEAD:master
        git tag ${{ github.event.inputs.tag }}
        git push --tags

    - name: Create release ${{ github.event.inputs.tag }}
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.event.inputs.tag }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}